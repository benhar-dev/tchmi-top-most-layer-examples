<div id="Desktop" data-tchmi-type="TcHmi.Controls.System.TcHmiView" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width-mode="Content" data-tchmi-min-width="100" data-tchmi-min-width-unit="%" data-tchmi-height-mode="Content" data-tchmi-min-height="100" data-tchmi-min-height-unit="%" data-tchmi-is-enabled="true">
  <div id="ViewDesktopBeckhoffLogo" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-src="Images/Beckhoff_Logo.svg" data-tchmi-left="20" data-tchmi-top="20" data-tchmi-width="194" data-tchmi-height="57">

  </div>
<div id="TcHmiButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-text="Open Content on TopMostLayer" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="126" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "// instantiates the content in memory",
          "var content = TcHmi.ControlFactory.createEx(",
          "    'TcHmi.Controls.System.TcHmiRegion',",
          "    'MyUc',",
          "    {",
          "        'data-tchmi-target-content':'MyContent.content',",
          "        'data-tchmi-width': 170,",
          "        'data-tchmi-height': 120,",
          "        'data-tchmi-width-mode' : \"Content\"",
          "    }",
          ");",
          "",
          "// creates a top most layer using the content",
          "TcHmi.TopMostLayer.addEx(content.getElement(), {",
          "    centerHorizontal: true,",
          "    centerVertical: true,",
          "    closeOnBackground: true,",
          "    removeCb: (data) => {",
          "        if (data.canceled) {",
          "            console.log('canceled');",
          "        }",
          "    \tcontent.destroy();",
          "    }",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="156" data-tchmi-left-unit="px" data-tchmi-text="Open UserControl on TopMostLayer" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="126" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_1.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "// instantiates the user control in memory",
          "var userControl = TcHmi.ControlFactory.createEx(",
          "    'TcHmi.Controls.System.TcHmiUserControlHost',",
          "    'MyUc',",
          "    {",
          "        'data-tchmi-target-user-control':'MyUserControl.usercontrol',",
          "        'data-tchmi-width': 145,",
          "        'data-tchmi-height': 110,",
          "        'data-tchmi-width-mode' : \"Content\"",
          "    }",
          ");",
          "",
          "// links the mySwitch usercontrol parameter with the PLC variable plcBool",
          "TcHmi.Binding.createEx('%s%PLC1.MAIN.plcBool%/s%','setMySwitch',userControl);",
          "",
          "// creates a top most layer with the usercontrol as the content",
          "TcHmi.TopMostLayer.addEx(userControl.getElement(), {",
          "    centerHorizontal: true,",
          "    centerVertical: true,",
          "    closeOnBackground: true,",
          "    removeCb: (data) => {",
          "        if (data.canceled) {",
          "            // top most layer is canceled",
          "        }",
          "    \tuserControl.destroy();",
          "    }",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="292" data-tchmi-left-unit="px" data-tchmi-text="HTML on TopMostLayer" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="126" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_3.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "var myPopup = $('<div style=\"background:white;padding:10px;\">Hello World<div>');",
          "TcHmi.TopMostLayer.add(this, myPopup, {",
          "    centerHorizontal: true,",
          "    centerVertical: true,",
          "    removeCb: (data) => {",
          "        if (data.canceled) {",
          "            // user clicked on background",
          "        }",
          "    }",
          "});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>
</div>